/* RESET */
@import 'meyer-reset.css';
@import 'setup.css';

@import 'developer-styles.css';
/* comment this ^ out - when you are ready */


/* SETTINGS */
@import 'settings.css';
/* variables/ etc */


/* STRUCTURE */
@import 'structure.css';


/* TYPOGRAPHY */
@import 'typography.css';


/* COMPONENTS */
@import 'components.css';




/* SITE SECTIONS */

body * {
    display: flex;
    flex-direction: column;
}

/*.empty {
	display:  none;
}*/



header {
    display: flex;
    flex-direction: column;
    justify-content: center;
    text-align: center;
    gap: 20px;

    background-color: var(--foreground);

    padding: 40px 10px;
    color: var(--text);

}

header input {
    padding: 10px;
    width: 50%;
}

.search-box {
    padding: 15px 0;
}

input[type="text"],
input[type="text"]:focus {
    color: var(--black);
    border: 1px solid var(--terms);
    outline: none;

    padding: 15px 15px 15px 32px;


}

i {
    cursor: pointer;
}

input[type="submit"] {
    background-color: var(--button);
    color: var(--text);
    font-size: 16px;
    font-weight: 900;
    align-self: center;
    padding: 15px 30px;
    cursor: pointer;
    -webkit-appearance: textfield;
    -webkit-appearance: none;
    -webkit-border-fit: border;
    border: none;
}

form.add {
    gap: 10px;
}



.filters,
.controls {
    flex-direction: row;

}

.filters {
    gap: 20px;
    align-self: center;
}

.filters span {

    cursor: pointer;
}

.filters span.active {
    color: var(--alternate);
    border-bottom: 1px solid var(--background);

}

.controls {
    justify-content: space-between;
    gap: 10px;
    padding-bottom: 20px;
    border-bottom: 1px solid var(--terms);
}

.controls button {
    background-color: var(--error);
    color: var(--text);
    font-size: 16px;
    font-weight: 500;
    align-self: center;
    padding: 10px 20px;
    cursor: pointer;
    -webkit-appearance: textfield;
    -webkit-appearance: none;
    -webkit-border-fit: border;
    border: none;

}


li.task p {
    align-self: center;
}

label {
    flex-direction: row;
    gap: 10px;
}

form {
    position: relative;
}

form.add input[type="text"] {
    position: relative;
}

form i {
    top: 50%;
    position: absolute;
    transform: translate(10px, -50%);
}



.todo-list {
    gap: 30px;
}

.masthead {
    gap: 10px;
}

.list-container {
    gap: 20px;
}

.todo-list ul:not(.task-menu) {
    gap: 15px;

}

.todo-list ul li {
    flex-direction: row;
    justify-content: space-between;
    padding: 5px 0;
    border-bottom: 1px solid var(--terms);
}

ul.task-menu li {

    border-bottom: none;
    gap: 5px;
    justify-content: start;

    /*height: 30px;*/
    padding: 8px;
}

ul .task p.checked {
	text-decoration: line-through;
}


@media (hover: hover) {
    body {
        /*background-color: red !important;*/
    }
}


@media (hover: none) {

    body {
        /*background-color: dodgerblue; !important;*/
    }
}

ul.task-menu li:hover {
    background-color: #f5f5f5;
}

.task .settings {
    cursor: pointer;
    position: relative;
}

.task .settings .task-menu {
    position: absolute;
    right: -5px;
    background: var(--white);
    padding: 5px;
    box-shadow: 0 0 6px rgb(0 0 0 / 0.15);
    z-index: 2;

    transform: scale(0);
    transition: transform 0.3s ease-in-out;
    transform-origin: top right;
}

.task .settings .show {
    transform: scale(1);
}

.todo-list .todo-text {
    flex-direction: row;
    align-items: baseline;

}

.fa-trash-can {
    align-self: flex-end;
    align-content: flex-end;
    align-items: flex-end;
}

input.error {
    border: 2px solid var(--error);
}

p.empty {
	text-align: center;
}


.filtered {
    display: none;
}